@using Forum.Entities;
@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService authorizationService;
@model Topic

@{
    if (@Model != null)
    {
        ViewData["Title"] = @Model.Name;
    }
    else
    {
        ViewData["Title"] = "Topic Not Found";
    }
}

@if (Model != null)
{
    @* Defining pagination variables here so we get the correct type and also don't have to type ViewBag to access them every time. *@
    int totalItems = ViewBag.totalItems;
    int itemsPerPage = ViewBag.itemsPerPage;
    int currentPage = ViewBag.currentPage;
    int totalPages = ViewBag.totalPages;
    int previous = ViewBag.previous;
    int next = ViewBag.next;

    @* Defining this variable (which is used later to determine if we render confirmDeletePostModal code) so that it is scoped to the entire page *@
    bool atLeastOnePostToRemove = false;

    @section ForumNavigation
    {
        > <a class="navLinks" asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id">@Model.Name</a>
    }

    @if ((await authorizationService.AuthorizeAsync(User, @Model.CategoryId, "IsValidUser")).Succeeded)
    {
        <p><a class="addBtn" asp-controller="Forum" asp-action="AddPost" asp-route-id="@Model.Id">Add Post</a></p>
    }
    else
    {
        <br>
    }

    @if (Model.Posts.Any())
    {
        @foreach (var post in @Model.Posts)
        {
            <div class="row postRow">
                <div class="col-8 topicTitleArea">
                    <a class="navLinks" asp-controller="Forum" asp-action="Post" asp-route-id="@post.Id">@post.Title</a>&nbsp;&nbsp;
                    @if ((await authorizationService.AuthorizeAsync(User, post.Id, "DeletePost")).Succeeded)
                    {
                        @* Setting this variable here because we don't have access to the post.Id variable required for DeletePost policy outside this foreach loop. We check atLeastOnePostToRemove at the bottom of the page. *@
                        atLeastOnePostToRemove = true;
                        <a href="javascript:openDeletePostModal(@post.Id, '@post.Title')" class="removeBtn">Remove</a>
                    }
                </div>
                @if (post.MostRecentComment != null)
                {
                    <div class="col-1"></div>
                    <div class="col-3">
                        <div class="row topicLastComment"><a class="postRightSideLinks" asp-controller="Forum" asp-action="Post" asp-route-id="@post.Id" asp-route-page="@post.LastPage" asp-fragment="com_@post.MostRecentComment.Id">@post.MostRecentComment.HowLongAgo</a></div>
                        <div class="row topicLastComment"><a class="postRightSideLinks" asp-controller="Forum" asp-action="UserInformation" asp-route-id="@post.MostRecentComment.ApplicationUser.Id">@post.MostRecentComment.ApplicationUser.Username</a></div>
                    </div>
                }
                else
                {
                    <div class="col-4"> No comments in Post</div>
                }
            </div> 
        }
        <br><br>
        <div class="pagination">
            @*Previous*@
            @if (previous < 1)
            {
                // If previous page is less than 1, then it doesn't exist, so don't display link.
                // This also ensures that it doesn't display if there is only 1 page (pagination bar isn't shown).
            }
            else if (previous == 1)
            {
                // If previous is 1, it is the default (first) page for that topic, so display link to topic page without page variable.
                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id">&laquo;</a>
            }
            else
            {
                // Otherwise, display the previous icon, which links to the topic with the current id and page = previous.
                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id" asp-route-page="@previous">&laquo;</a>
            }

            @*Pages*@
            @* Only display links if there is more than 1 page *@
            @if (totalPages > 1)
            {
                // when an anchor tags class=active, its number is highlighted so signify that we are on that page.
                // declare variable here so it has scope in this whole if block.
                string activeClass = "";

                // If we are on the default (first) page, set the activeClass string to active.
                if (currentPage == 1)
                {
                    activeClass = "active";
                }
                else
                {
                    activeClass = "";
                }

                // For the default (first) page, display link to topic page without page variable.
                <a class=@activeClass asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id">1</a>

                // For the rest of the pages (we've already done page 1, so we start with index = 2), loop through and display the links, with the difference here being we now add asp-route-page, because the page will not be the default page 1.
                @for (int i = 2; i <= totalPages; i++)
                {
                    // If the index is the current page, set the activeClass string to active.
                    if (currentPage == i)
                    {
                        activeClass = "active";
                    }
                    else
                    {
                        activeClass = "";
                    }

                    // asp-route-page links to what the current index is.
                    <a class=@activeClass asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id" asp-route-page="@i">@i</a>
                }
            }

            @*Next*@
            @if (next > totalPages)
            {
                // If next page is greater than totalPages, then it doesn't exist, so don't display link.
            } else
            {
                // Otherwise, display the next icon, which links to the topic with the current id and page = next.
                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@Model.Id" asp-route-page="@next">&raquo;</a>
            }
        </div>

        @*
        The confirm delete post modal referenced earlier is implemented here at the bottom of the page.
        atLeastOnePostToRemove (set inside the DeletePost policy check) must be true.
        *@
        @if (atLeastOnePostToRemove)
        {
            @* The modals display is set to none *@
            <div id="confirmDeletePostModal" class="modal">
                <div class="modal-content">
                    <span class="modalClose" style="background-color:white;" onclick="closeDeletePostModal()">&times;</span>
                    <p style="background-color:white;">Confirm deleting <span id="deletePostTitle" style="background-color:white;"></span>&#63;</p>
                    <form asp-controller="Forum" asp-action="DeletePost" id="deletePostForm" method="post" style="background-color:white;">
                        <input type="hidden" id="deletePostId" name="deletePostId" />
                        <input type="hidden" id="currentPage" name="currentPage" value="@currentPage" />
                        <a class="removePostBtn" href="javascript:submitDeletePost()">Yes - Delete</a>
                        @* The modals display is set to none *@
                        &nbsp;&nbsp;&nbsp;&nbsp;<a class="cancelRemovePostBtn" href="javascript:closeDeletePostModal()">No - Cancel</a>
                    </form>
                    <br>
                </div>
            </div>

            @* This scripts section is placed here inside the if block to ensure that the topicAdmin.js file (which contains the js relating to the deleting post modal) is only rendered if the atLeastOnePostToRemove variable is true (which means the DeletePost policy is satisfied). *@
            @section scripts {
                <script src="~/js/topicAdmin.js" asp-append-version="true"></script>
            }
        }
    }
    else
    {
        <p>No posts in topic.</p>
    }
}
else
{
    <h1>Topic doesn&#39;t exist</h1>
}